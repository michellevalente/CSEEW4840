|SoCKit_Top
AUD_ADCDAT => ~NO_FANOUT~
AUD_ADCLRCK <> AUD_ADCLRCK
AUD_BCLK <> AUD_BCLK
AUD_DACLRCK <> AUD_DACLRCK
AUD_I2C_SDAT <> AUD_I2C_SDAT
AUD_I2C_SCLK <= <GND>
AUD_DACDAT <= <GND>
AUD_MUTE <= <GND>
AUD_XCK <= <GND>
FAN_CTRL <= <GND>
HSMC_CLKIN_n[1] => ~NO_FANOUT~
HSMC_CLKIN_n[2] => ~NO_FANOUT~
HSMC_CLKIN_p[1] => ~NO_FANOUT~
HSMC_CLKIN_p[2] => ~NO_FANOUT~
HSMC_CLKOUT_n[1] <= <GND>
HSMC_CLKOUT_n[2] <= <GND>
HSMC_CLKOUT_p[1] <= <GND>
HSMC_CLKOUT_p[2] <= <GND>
HSMC_CLK_IN0 => ~NO_FANOUT~
HSMC_CLK_OUT0 <= <GND>
HSMC_D[0] <> HSMC_D[0]
HSMC_D[1] <> HSMC_D[1]
HSMC_D[2] <> HSMC_D[2]
HSMC_D[3] <> HSMC_D[3]
HSMC_RX_n[0] <> HSMC_RX_n[0]
HSMC_RX_n[1] <> HSMC_RX_n[1]
HSMC_RX_n[2] <> HSMC_RX_n[2]
HSMC_RX_n[3] <> HSMC_RX_n[3]
HSMC_RX_n[4] <> HSMC_RX_n[4]
HSMC_RX_n[5] <> HSMC_RX_n[5]
HSMC_RX_n[6] <> HSMC_RX_n[6]
HSMC_RX_n[7] <> HSMC_RX_n[7]
HSMC_RX_n[8] <> HSMC_RX_n[8]
HSMC_RX_n[9] <> HSMC_RX_n[9]
HSMC_RX_n[10] <> HSMC_RX_n[10]
HSMC_RX_n[11] <> HSMC_RX_n[11]
HSMC_RX_n[12] <> HSMC_RX_n[12]
HSMC_RX_n[13] <> HSMC_RX_n[13]
HSMC_RX_n[14] <> HSMC_RX_n[14]
HSMC_RX_n[15] <> HSMC_RX_n[15]
HSMC_RX_n[16] <> HSMC_RX_n[16]
HSMC_RX_p[0] <> HSMC_RX_p[0]
HSMC_RX_p[1] <> HSMC_RX_p[1]
HSMC_RX_p[2] <> HSMC_RX_p[2]
HSMC_RX_p[3] <> HSMC_RX_p[3]
HSMC_RX_p[4] <> HSMC_RX_p[4]
HSMC_RX_p[5] <> HSMC_RX_p[5]
HSMC_RX_p[6] <> HSMC_RX_p[6]
HSMC_RX_p[7] <> HSMC_RX_p[7]
HSMC_RX_p[8] <> HSMC_RX_p[8]
HSMC_RX_p[9] <> HSMC_RX_p[9]
HSMC_RX_p[10] <> HSMC_RX_p[10]
HSMC_RX_p[11] <> HSMC_RX_p[11]
HSMC_RX_p[12] <> HSMC_RX_p[12]
HSMC_RX_p[13] <> HSMC_RX_p[13]
HSMC_RX_p[14] <> HSMC_RX_p[14]
HSMC_RX_p[15] <> HSMC_RX_p[15]
HSMC_RX_p[16] <> HSMC_RX_p[16]
HSMC_TX_n[0] <> HSMC_TX_n[0]
HSMC_TX_n[1] <> HSMC_TX_n[1]
HSMC_TX_n[2] <> HSMC_TX_n[2]
HSMC_TX_n[3] <> HSMC_TX_n[3]
HSMC_TX_n[4] <> HSMC_TX_n[4]
HSMC_TX_n[5] <> HSMC_TX_n[5]
HSMC_TX_n[6] <> HSMC_TX_n[6]
HSMC_TX_n[7] <> HSMC_TX_n[7]
HSMC_TX_n[8] <> HSMC_TX_n[8]
HSMC_TX_n[9] <> HSMC_TX_n[9]
HSMC_TX_n[10] <> HSMC_TX_n[10]
HSMC_TX_n[11] <> HSMC_TX_n[11]
HSMC_TX_n[12] <> HSMC_TX_n[12]
HSMC_TX_n[13] <> HSMC_TX_n[13]
HSMC_TX_n[14] <> HSMC_TX_n[14]
HSMC_TX_n[15] <> HSMC_TX_n[15]
HSMC_TX_n[16] <> HSMC_TX_n[16]
HSMC_TX_p[0] <> HSMC_TX_p[0]
HSMC_TX_p[1] <> HSMC_TX_p[1]
HSMC_TX_p[2] <> HSMC_TX_p[2]
HSMC_TX_p[3] <> HSMC_TX_p[3]
HSMC_TX_p[4] <> HSMC_TX_p[4]
HSMC_TX_p[5] <> HSMC_TX_p[5]
HSMC_TX_p[6] <> HSMC_TX_p[6]
HSMC_TX_p[7] <> HSMC_TX_p[7]
HSMC_TX_p[8] <> HSMC_TX_p[8]
HSMC_TX_p[9] <> HSMC_TX_p[9]
HSMC_TX_p[10] <> HSMC_TX_p[10]
HSMC_TX_p[11] <> HSMC_TX_p[11]
HSMC_TX_p[12] <> HSMC_TX_p[12]
HSMC_TX_p[13] <> HSMC_TX_p[13]
HSMC_TX_p[14] <> HSMC_TX_p[14]
HSMC_TX_p[15] <> HSMC_TX_p[15]
HSMC_TX_p[16] <> HSMC_TX_p[16]
HSMC_SDA <> HSMC_SDA
HSMC_SCL <= <GND>
IRDA_RXD => ~NO_FANOUT~
KEY[0] => LED.IN0
KEY[0] => lab1:lab1.KEY[0]
KEY[1] => LED.IN0
KEY[1] => lab1:lab1.KEY[1]
KEY[2] => LED.IN0
KEY[2] => lab1:lab1.KEY[2]
KEY[3] => LED.IN0
KEY[3] => lab1:lab1.KEY[3]
LED[0] <= LED.DB_MAX_OUTPUT_PORT_TYPE
LED[1] <= LED.DB_MAX_OUTPUT_PORT_TYPE
LED[2] <= LED.DB_MAX_OUTPUT_PORT_TYPE
LED[3] <= LED.DB_MAX_OUTPUT_PORT_TYPE
OSC_50_B3B => VGA_LED_Emulator:led_emulator.clk50
OSC_50_B3B => lab1:lab1.clk
OSC_50_B4A => ~NO_FANOUT~
OSC_50_B5B => ~NO_FANOUT~
OSC_50_B8A => ~NO_FANOUT~
PCIE_PERST_n => ~NO_FANOUT~
PCIE_WAKE_n => ~NO_FANOUT~
RESET_n => VGA_LED_Emulator:led_emulator.reset
SI5338_SCL <> SI5338_SCL
SI5338_SDA <> SI5338_SDA
SW[0] => LED.IN1
SW[0] => hex0[7].OUTPUTSELECT
SW[0] => hex0[6].OUTPUTSELECT
SW[0] => hex0[5].OUTPUTSELECT
SW[0] => hex0[4].OUTPUTSELECT
SW[0] => hex0[3].OUTPUTSELECT
SW[0] => hex0[2].OUTPUTSELECT
SW[0] => hex0[1].OUTPUTSELECT
SW[0] => hex0[0].OUTPUTSELECT
SW[0] => hex2[7].OUTPUTSELECT
SW[0] => hex2[6].OUTPUTSELECT
SW[0] => hex2[5].OUTPUTSELECT
SW[0] => hex2[4].OUTPUTSELECT
SW[0] => hex2[3].OUTPUTSELECT
SW[0] => hex2[2].OUTPUTSELECT
SW[0] => hex2[1].OUTPUTSELECT
SW[0] => hex2[0].OUTPUTSELECT
SW[0] => hex3[7].OUTPUTSELECT
SW[0] => hex3[6].OUTPUTSELECT
SW[0] => hex3[5].OUTPUTSELECT
SW[0] => hex3[4].OUTPUTSELECT
SW[0] => hex3[3].OUTPUTSELECT
SW[0] => hex3[2].OUTPUTSELECT
SW[0] => hex3[1].OUTPUTSELECT
SW[0] => hex3[0].OUTPUTSELECT
SW[0] => VGA_LED_Emulator:led_emulator.hex1[6]
SW[0] => VGA_LED_Emulator:led_emulator.hex1[5]
SW[0] => VGA_LED_Emulator:led_emulator.hex1[3]
SW[0] => VGA_LED_Emulator:led_emulator.hex1[2]
SW[0] => VGA_LED_Emulator:led_emulator.hex1[0]
SW[0] => VGA_LED_Emulator:led_emulator.hex4[6]
SW[0] => VGA_LED_Emulator:led_emulator.hex4[5]
SW[0] => VGA_LED_Emulator:led_emulator.hex4[2]
SW[0] => VGA_LED_Emulator:led_emulator.hex4[1]
SW[0] => VGA_LED_Emulator:led_emulator.hex5[6]
SW[0] => VGA_LED_Emulator:led_emulator.hex5[5]
SW[0] => VGA_LED_Emulator:led_emulator.hex5[4]
SW[0] => VGA_LED_Emulator:led_emulator.hex5[3]
SW[0] => VGA_LED_Emulator:led_emulator.hex5[2]
SW[0] => VGA_LED_Emulator:led_emulator.hex5[1]
SW[0] => VGA_LED_Emulator:led_emulator.hex5[0]
SW[0] => VGA_LED_Emulator:led_emulator.hex6[6]
SW[0] => VGA_LED_Emulator:led_emulator.hex6[5]
SW[0] => VGA_LED_Emulator:led_emulator.hex6[2]
SW[0] => VGA_LED_Emulator:led_emulator.hex6[1]
SW[0] => VGA_LED_Emulator:led_emulator.hex7[7]
SW[0] => VGA_LED_Emulator:led_emulator.hex7[5]
SW[0] => VGA_LED_Emulator:led_emulator.hex7[4]
SW[0] => VGA_LED_Emulator:led_emulator.hex7[3]
SW[0] => VGA_LED_Emulator:led_emulator.hex7[2]
SW[0] => VGA_LED_Emulator:led_emulator.hex7[1]
SW[0] => VGA_LED_Emulator:led_emulator.hex7[0]
SW[1] => LED.IN1
SW[2] => LED.IN1
SW[3] => LED.IN1
TEMP_CS_n <= <VCC>
TEMP_DIN <= <GND>
TEMP_SCLK <= <GND>
TEMP_DOUT => ~NO_FANOUT~
USB_B2_CLK => ~NO_FANOUT~
USB_OE_n => ~NO_FANOUT~
USB_RD_n => ~NO_FANOUT~
USB_WR_n => ~NO_FANOUT~
USB_RESET_n => ~NO_FANOUT~
USB_B2_DATA[0] <> USB_B2_DATA[0]
USB_B2_DATA[1] <> USB_B2_DATA[1]
USB_B2_DATA[2] <> USB_B2_DATA[2]
USB_B2_DATA[3] <> USB_B2_DATA[3]
USB_B2_DATA[4] <> USB_B2_DATA[4]
USB_B2_DATA[5] <> USB_B2_DATA[5]
USB_B2_DATA[6] <> USB_B2_DATA[6]
USB_B2_DATA[7] <> USB_B2_DATA[7]
USB_EMPTY <= <GND>
USB_FULL <= <GND>
USB_SCL <> USB_SCL
USB_SDA <> USB_SDA
VGA_R[0] <= VGA_LED_Emulator:led_emulator.VGA_R[0]
VGA_R[1] <= VGA_LED_Emulator:led_emulator.VGA_R[1]
VGA_R[2] <= VGA_LED_Emulator:led_emulator.VGA_R[2]
VGA_R[3] <= VGA_LED_Emulator:led_emulator.VGA_R[3]
VGA_R[4] <= VGA_LED_Emulator:led_emulator.VGA_R[4]
VGA_R[5] <= VGA_LED_Emulator:led_emulator.VGA_R[5]
VGA_R[6] <= VGA_LED_Emulator:led_emulator.VGA_R[6]
VGA_R[7] <= VGA_LED_Emulator:led_emulator.VGA_R[7]
VGA_G[0] <= VGA_LED_Emulator:led_emulator.VGA_G[0]
VGA_G[1] <= VGA_LED_Emulator:led_emulator.VGA_G[1]
VGA_G[2] <= VGA_LED_Emulator:led_emulator.VGA_G[2]
VGA_G[3] <= VGA_LED_Emulator:led_emulator.VGA_G[3]
VGA_G[4] <= VGA_LED_Emulator:led_emulator.VGA_G[4]
VGA_G[5] <= VGA_LED_Emulator:led_emulator.VGA_G[5]
VGA_G[6] <= VGA_LED_Emulator:led_emulator.VGA_G[6]
VGA_G[7] <= VGA_LED_Emulator:led_emulator.VGA_G[7]
VGA_B[0] <= VGA_LED_Emulator:led_emulator.VGA_B[0]
VGA_B[1] <= VGA_LED_Emulator:led_emulator.VGA_B[1]
VGA_B[2] <= VGA_LED_Emulator:led_emulator.VGA_B[2]
VGA_B[3] <= VGA_LED_Emulator:led_emulator.VGA_B[3]
VGA_B[4] <= VGA_LED_Emulator:led_emulator.VGA_B[4]
VGA_B[5] <= VGA_LED_Emulator:led_emulator.VGA_B[5]
VGA_B[6] <= VGA_LED_Emulator:led_emulator.VGA_B[6]
VGA_B[7] <= VGA_LED_Emulator:led_emulator.VGA_B[7]
VGA_CLK <= VGA_LED_Emulator:led_emulator.VGA_CLK
VGA_HS <= VGA_LED_Emulator:led_emulator.VGA_HS
VGA_VS <= VGA_LED_Emulator:led_emulator.VGA_VS
VGA_BLANK_n <= VGA_LED_Emulator:led_emulator.VGA_BLANK_n
VGA_SYNC_n <= VGA_LED_Emulator:led_emulator.VGA_SYNC_n


|SoCKit_Top|VGA_LED_Emulator:led_emulator
clk50 => vcount[0].CLK
clk50 => vcount[1].CLK
clk50 => vcount[2].CLK
clk50 => vcount[3].CLK
clk50 => vcount[4].CLK
clk50 => vcount[5].CLK
clk50 => vcount[6].CLK
clk50 => vcount[7].CLK
clk50 => vcount[8].CLK
clk50 => vcount[9].CLK
clk50 => hcount[0].CLK
clk50 => hcount[1].CLK
clk50 => hcount[2].CLK
clk50 => hcount[3].CLK
clk50 => hcount[4].CLK
clk50 => hcount[5].CLK
clk50 => hcount[6].CLK
clk50 => hcount[7].CLK
clk50 => hcount[8].CLK
clk50 => hcount[9].CLK
clk50 => hcount[10].CLK
reset => vcount[0].ACLR
reset => vcount[1].ACLR
reset => vcount[2].ACLR
reset => vcount[3].ACLR
reset => vcount[4].ACLR
reset => vcount[5].ACLR
reset => vcount[6].ACLR
reset => vcount[7].ACLR
reset => vcount[8].ACLR
reset => vcount[9].ACLR
reset => hcount[0].ACLR
reset => hcount[1].ACLR
reset => hcount[2].ACLR
reset => hcount[3].ACLR
reset => hcount[4].ACLR
reset => hcount[5].ACLR
reset => hcount[6].ACLR
reset => hcount[7].ACLR
reset => hcount[8].ACLR
reset => hcount[9].ACLR
reset => hcount[10].ACLR
hex0[0] => curSegs[0].DATAB
hex0[1] => curSegs[1].DATAB
hex0[2] => curSegs[2].DATAB
hex0[3] => curSegs[3].DATAB
hex0[4] => curSegs[4].DATAB
hex0[5] => curSegs[5].DATAB
hex0[6] => curSegs[6].DATAB
hex0[7] => curSegs[7].DATAB
hex1[0] => curSegs.DATAB
hex1[1] => curSegs.DATAB
hex1[2] => curSegs.DATAB
hex1[3] => curSegs.DATAB
hex1[4] => curSegs.DATAB
hex1[5] => curSegs.DATAB
hex1[6] => curSegs.DATAB
hex1[7] => curSegs.DATAB
hex2[0] => curSegs.DATAB
hex2[1] => curSegs.DATAB
hex2[2] => curSegs.DATAB
hex2[3] => curSegs.DATAB
hex2[4] => curSegs.DATAB
hex2[5] => curSegs.DATAB
hex2[6] => curSegs.DATAB
hex2[7] => curSegs.DATAB
hex3[0] => curSegs.DATAB
hex3[1] => curSegs.DATAB
hex3[2] => curSegs.DATAB
hex3[3] => curSegs.DATAB
hex3[4] => curSegs.DATAB
hex3[5] => curSegs.DATAB
hex3[6] => curSegs.DATAB
hex3[7] => curSegs.DATAB
hex4[0] => curSegs.DATAB
hex4[1] => curSegs.DATAB
hex4[2] => curSegs.DATAB
hex4[3] => curSegs.DATAB
hex4[4] => curSegs.DATAB
hex4[5] => curSegs.DATAB
hex4[6] => curSegs.DATAB
hex4[7] => curSegs.DATAB
hex5[0] => curSegs.DATAB
hex5[1] => curSegs.DATAB
hex5[2] => curSegs.DATAB
hex5[3] => curSegs.DATAB
hex5[4] => curSegs.DATAB
hex5[5] => curSegs.DATAB
hex5[6] => curSegs.DATAB
hex5[7] => curSegs.DATAB
hex6[0] => curSegs.DATAB
hex6[1] => curSegs.DATAB
hex6[2] => curSegs.DATAB
hex6[3] => curSegs.DATAB
hex6[4] => curSegs.DATAB
hex6[5] => curSegs.DATAB
hex6[6] => curSegs.DATAB
hex6[7] => curSegs.DATAB
hex7[0] => curSegs.DATAA
hex7[1] => curSegs.DATAA
hex7[2] => curSegs.DATAA
hex7[3] => curSegs.DATAA
hex7[4] => curSegs.DATAA
hex7[5] => curSegs.DATAA
hex7[6] => curSegs.DATAA
hex7[7] => curSegs.DATAA
VGA_R[0] <= VGA_R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[1] <= VGA_R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[2] <= VGA_R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[3] <= VGA_R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[4] <= VGA_R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[5] <= VGA_R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[6] <= VGA_R.DB_MAX_OUTPUT_PORT_TYPE
VGA_R[7] <= VGA_R.DB_MAX_OUTPUT_PORT_TYPE
VGA_G[0] <= <GND>
VGA_G[1] <= <GND>
VGA_G[2] <= <GND>
VGA_G[3] <= <GND>
VGA_G[4] <= <GND>
VGA_G[5] <= VGA_G.DB_MAX_OUTPUT_PORT_TYPE
VGA_G[6] <= <GND>
VGA_G[7] <= <GND>
VGA_B[0] <= <GND>
VGA_B[1] <= <GND>
VGA_B[2] <= <GND>
VGA_B[3] <= <GND>
VGA_B[4] <= <GND>
VGA_B[5] <= VGA_B.DB_MAX_OUTPUT_PORT_TYPE
VGA_B[6] <= <GND>
VGA_B[7] <= <GND>
VGA_CLK <= hcount[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_HS <= VGA_HS.DB_MAX_OUTPUT_PORT_TYPE
VGA_VS <= Equal3.DB_MAX_OUTPUT_PORT_TYPE
VGA_BLANK_n <= VGA_BLANK_n.DB_MAX_OUTPUT_PORT_TYPE
VGA_SYNC_n <= <VCC>


|SoCKit_Top|lab1:lab1
clk => divider:d.clk
KEY[0] => controller:c.KEY[0]
KEY[1] => controller:c.KEY[1]
KEY[2] => controller:c.KEY[2]
KEY[3] => controller:c.KEY[3]
hex0[0] <= hex7seg:h0.y
hex0[1] <= hex7seg:h0.y
hex0[2] <= hex7seg:h0.y
hex0[3] <= hex7seg:h0.y
hex0[4] <= hex7seg:h0.y
hex0[5] <= hex7seg:h0.y
hex0[6] <= hex7seg:h0.y
hex0[7] <= hex7seg:h0.y
hex2[0] <= hex7seg:h2.y
hex2[1] <= hex7seg:h2.y
hex2[2] <= hex7seg:h2.y
hex2[3] <= hex7seg:h2.y
hex2[4] <= hex7seg:h2.y
hex2[5] <= hex7seg:h2.y
hex2[6] <= hex7seg:h2.y
hex2[7] <= hex7seg:h2.y
hex3[0] <= hex7seg:h3.y
hex3[1] <= hex7seg:h3.y
hex3[2] <= hex7seg:h3.y
hex3[3] <= hex7seg:h3.y
hex3[4] <= hex7seg:h3.y
hex3[5] <= hex7seg:h3.y
hex3[6] <= hex7seg:h3.y
hex3[7] <= hex7seg:h3.y


|SoCKit_Top|lab1:lab1|hex7seg:h0
a[0] => Decoder0.IN3
a[1] => Decoder0.IN2
a[2] => Decoder0.IN1
a[3] => Decoder0.IN0
y[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
y[7] <= <GND>


|SoCKit_Top|lab1:lab1|hex7seg:h2
a[0] => Decoder0.IN3
a[1] => Decoder0.IN2
a[2] => Decoder0.IN1
a[3] => Decoder0.IN0
y[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
y[7] <= <GND>


|SoCKit_Top|lab1:lab1|hex7seg:h3
a[0] => Decoder0.IN3
a[1] => Decoder0.IN2
a[2] => Decoder0.IN1
a[3] => Decoder0.IN0
y[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
y[7] <= <GND>


|SoCKit_Top|lab1:lab1|controller:c
clk2 => we~reg0.CLK
clk2 => din[0]~reg0.CLK
clk2 => din[1]~reg0.CLK
clk2 => din[2]~reg0.CLK
clk2 => din[3]~reg0.CLK
clk2 => din[4]~reg0.CLK
clk2 => din[5]~reg0.CLK
clk2 => din[6]~reg0.CLK
clk2 => din[7]~reg0.CLK
clk2 => temp.CLK
clk2 => a[0]~reg0.CLK
clk2 => a[1]~reg0.CLK
clk2 => a[2]~reg0.CLK
clk2 => a[3]~reg0.CLK
KEY[0] => always0.IN0
KEY[0] => always0.IN0
KEY[0] => always0.IN0
KEY[1] => always0.IN1
KEY[1] => always0.IN1
KEY[1] => always0.IN1
KEY[2] => always0.IN0
KEY[2] => always0.IN1
KEY[2] => always0.IN0
KEY[3] => always0.IN1
KEY[3] => always0.IN1
KEY[3] => always0.IN1
dout[0] => Add2.IN16
dout[0] => Add3.IN16
dout[1] => Add2.IN15
dout[1] => Add3.IN15
dout[2] => Add2.IN14
dout[2] => Add3.IN14
dout[3] => Add2.IN13
dout[3] => Add3.IN13
dout[4] => Add2.IN12
dout[4] => Add3.IN12
dout[5] => Add2.IN11
dout[5] => Add3.IN11
dout[6] => Add2.IN10
dout[6] => Add3.IN10
dout[7] => Add2.IN9
dout[7] => Add3.IN9
a[0] <= a[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
a[1] <= a[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
a[2] <= a[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
a[3] <= a[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
din[0] <= din[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
din[1] <= din[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
din[2] <= din[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
din[3] <= din[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
din[4] <= din[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
din[5] <= din[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
din[6] <= din[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
din[7] <= din[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
we <= we~reg0.DB_MAX_OUTPUT_PORT_TYPE


|SoCKit_Top|lab1:lab1|memory:m
clk2 => mem.we_a.CLK
clk2 => mem.waddr_a[3].CLK
clk2 => mem.waddr_a[2].CLK
clk2 => mem.waddr_a[1].CLK
clk2 => mem.waddr_a[0].CLK
clk2 => mem.data_a[7].CLK
clk2 => mem.data_a[6].CLK
clk2 => mem.data_a[5].CLK
clk2 => mem.data_a[4].CLK
clk2 => mem.data_a[3].CLK
clk2 => mem.data_a[2].CLK
clk2 => mem.data_a[1].CLK
clk2 => mem.data_a[0].CLK
clk2 => dout[0]~reg0.CLK
clk2 => dout[1]~reg0.CLK
clk2 => dout[2]~reg0.CLK
clk2 => dout[3]~reg0.CLK
clk2 => dout[4]~reg0.CLK
clk2 => dout[5]~reg0.CLK
clk2 => dout[6]~reg0.CLK
clk2 => dout[7]~reg0.CLK
clk2 => mem.CLK0
a[0] => mem.waddr_a[0].DATAIN
a[0] => mem.WADDR
a[0] => mem.RADDR
a[1] => mem.waddr_a[1].DATAIN
a[1] => mem.WADDR1
a[1] => mem.RADDR1
a[2] => mem.waddr_a[2].DATAIN
a[2] => mem.WADDR2
a[2] => mem.RADDR2
a[3] => mem.waddr_a[3].DATAIN
a[3] => mem.WADDR3
a[3] => mem.RADDR3
din[0] => mem.data_a[0].DATAIN
din[0] => mem.DATAIN
din[1] => mem.data_a[1].DATAIN
din[1] => mem.DATAIN1
din[2] => mem.data_a[2].DATAIN
din[2] => mem.DATAIN2
din[3] => mem.data_a[3].DATAIN
din[3] => mem.DATAIN3
din[4] => mem.data_a[4].DATAIN
din[4] => mem.DATAIN4
din[5] => mem.data_a[5].DATAIN
din[5] => mem.DATAIN5
din[6] => mem.data_a[6].DATAIN
din[6] => mem.DATAIN6
din[7] => mem.data_a[7].DATAIN
din[7] => mem.DATAIN7
we => mem.we_a.DATAIN
we => mem.WE
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|SoCKit_Top|lab1:lab1|divider:d
clk => m[0].CLK
clk => m[1].CLK
clk => m[2].CLK
clk => m[3].CLK
clk2 <= LessThan1.DB_MAX_OUTPUT_PORT_TYPE


